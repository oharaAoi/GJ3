#include "GhostSoulManager.h"

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 初期化処理
///////////////////////////////////////////////////////////////////////////////////////////////

void GhostSoulManager::Init(Canvas2d* _canvas2d, Player* _player) {
	pCanvas2d_ = _canvas2d;
	pPlayer_ = _player;

	souls_.clear();
}

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 更新
///////////////////////////////////////////////////////////////////////////////////////////////

void GhostSoulManager::Update() {
	for (uint32_t index = 0; index < souls_.size(); ++index) {
		if (index == 0) {
			souls_[index]->RotatePlayer(pPlayer_->GetPosition());
			souls_[index]->Update(pPlayer_->GetPosition());

		} else {
			souls_[index]->Update(souls_[index - 1]->GetPosition());
		}
	}
}

///////////////////////////////////////////////////////////////////////////////////////////////
// ↓ 作成処理
///////////////////////////////////////////////////////////////////////////////////////////////

void GhostSoulManager::CreateSoul(const Vector2& tileSize) {
	auto& newSoul = souls_.emplace_back(std::make_unique<GhostSoul>());
	newSoul->Init(pCanvas2d_, tileSize * 0.7f);
	newSoul->SetPosition(pPlayer_->GetPosition());
}
